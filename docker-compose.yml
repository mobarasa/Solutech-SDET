###############################################################################
#                          Solutech Booking Challenge                         #
###############################################################################
version: '3.1'
services:
    app:
        container_name: booking-app
        image: 'nginx:alpine'
        working_dir: /application
        volumes:
            - '.:/application'
            - './docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf'
        ports:
            - '8000:80'
        depends_on:
            php-fpm:
                condition: service_healthy
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy

    php-fpm:
        container_name: booking-php-fpm
        build: docker/php-fpm
        working_dir: /application
        volumes:
            - '.:/application'
            - './docker/php-fpm/php-ini-overrides.ini:/etc/php/8.2/fpm/conf.d/99-overrides.ini'
            - './docker/php-fpm/php-ini-overrides.ini:/etc/php/8.2/cli/conf.d/99-overrides.ini'
            - './docker/setup:/setup'
        healthcheck:
            test: ["CMD", "php-fpm", "-t"]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 10s

    mysql:
        container_name: booking-mysql
        image: 'mysql:8.0'
        working_dir: /application
        volumes:
            - '.:/application'
            - 'booking-data:/var/lib/mysql'
        environment:
            - MYSQL_ROOT_PASSWORD=secret@santa
            - MYSQL_DATABASE=booking
            - MYSQL_USER=booking
            - MYSQL_PASSWORD=secret@santa
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 30s

    redis:
        container_name: booking-redis
        image: redis:alpine
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 3

    mailhog:
        container_name: booking-mailhog
        image: 'mailhog/mailhog:latest'
        ports:
            - '8001:8025'

    phpmyadmin:
        image: phpmyadmin
        container_name: booking-phpmyadmin
        environment:
            - PMA_ARBITRARY=1
        restart: always
        ports:
            - '8002:80'
        depends_on:
            - mysql

volumes:
    booking-data:
