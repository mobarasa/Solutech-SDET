name: Cypress Tests in Docker

on:
  pull_request:
    branches: [ master, develop ]
  push:
    branches: [ master, develop ]

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker permissions
        run: |
          sudo chmod +x docker/*.sh
          sudo chmod +x docker/setup/setup.sh

      - name: Build and start containers
        run: |
          cd docker
          ./build.sh
          ./start.sh

      - name: Set file permissions inside the container
        run: docker-compose exec booking-php-fpm chown -R www-data:www-data ./public

      - name: Install dependencies inside the container
        run: |
          docker-compose exec booking-php-fpm composer install
          docker-compose exec booking-php-fpm npm install
          docker-compose exec booking-php-fpm npm run build

      - name: Configure environment and database
        run: |
          docker-compose exec booking-php-fpm cp .env.example .env
          docker-compose exec booking-php-fpm php artisan key:generate
          docker-compose exec booking-php-fpm php artisan migrate:fresh --seed

      - name: Wait for Laravel to be ready
        run: |
          echo "Waiting for Laravel to be ready..."
          sleep 10 # Adjust if necessary
          curl --retry 10 --retry-delay 5 --retry-connrefused -I http://localhost:8000 || exit 1

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          start: "docker-compose up -d"
          wait-on: "http://localhost:8000"
          browser: chrome
          env: MOCHAWESOME_REPORT_DIR=cypress/reports
          config-file: cypress.json

      - name: Generate Test Report
        if: always()
        run: |
          npm install -g mochawesome-merge mochawesome-report-generator
          npx mochawesome-merge cypress/reports/*.json > cypress/reports/combined.json
          npx mochawesome-report-generator cypress/reports/combined.json --reportDir cypress/reports

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-test-results
          path: cypress/reports

      - name: Comment PR with Test Results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            try {
              const report = JSON.parse(fs.readFileSync('cypress/reports/combined.json'));
              const stats = report.stats;
              const comment = `## Cypress Test Results
              ‚úÖ Passed: ${stats.passes}
              ‚ùå Failed: ${stats.failures}
              ‚è±Ô∏è Duration: ${Math.round(stats.duration / 1000)}s
              üìä Total: ${stats.tests}

              [Detailed Report](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;

              github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.error('Error creating test report comment:', error);
            }

      - name: Stop containers
        if: always()
        run: |
          cd docker
          ./stop.sh
